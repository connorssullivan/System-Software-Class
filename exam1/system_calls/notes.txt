- Kernal Mode: When a program has direct access to underlying hardware and recources. It is a privilaged Role

- User Mode: A program that does not have access to underlying hardware and recources. So when a program 
             crashes the computer wont crash

- System Calls (Kernal Calls): Software interfaces (Usually written in C), that the user can call to interact with the kernal
                               without having to go into kernal mode.

- System Calls are expensive Procedures, Here is a few of their dudye:
    .change user mode to kernel mode, or vice versa, known as Context Switch
    .save all parameters of a user program to CPU
    .load all the arguments data to CPU
    .check file permission in case of read/write request
    .execute the system call procedure
    .after the system call, load all the saved parameters to CPU
    .continue execution of userâ€™s program


- System Calls use Unbuffered I/O, which means there is no intermediat storage buffer we need to save to. This ensures 
  imediate Output bur at the cost of more System calls, which can be inefficient

- System calls request a service from the kernal of the operating syste,

                      System Calls:
Source File ---------------------------------------> Destination File
                      Accuire Input Filename
                      Write a Prompt to Screen
                      Accept Input
                      Aquire Output Filename
                      Write Prompt to Screen
                      Accept Input
                      If File Doesnt Exist, ABORT
                      



